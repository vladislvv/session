# game/maze.py
import pygame
from settings import TILE_SIZE, PADDING, GRAY

maze_data =  [
    "###########################################################",
    "##........................................................#",
    "##.###.#########.###############.########.###.#####.#####.#",
    "##.###.#########.###############.########.###.#####.#####.#",
    "##.....#########..........................###.............#",
    "######.###.......#######.#######.###..###.###.#######.#####",
    "######.###.#####.#######.#######.#......#.###.#######.#####",
    " ......###.#####.#######.#######.#......#.###.#######....  ",
    "######.###.......#######.#######.#......#.###.#######.#####",
    "######.#########.#######.#######.########.###.###.....#####",
    "######.#########.#######.#######..........###.#######.#####",
    "######.#########.#######.#######.########.###.#######.#####",
    "##...............................########.................#",
    "##.####.##########.##.##########....##....#########.#####.#",
    "##.####.##########.##.##########.##.##.##.#########.#####.#",
    "##.................##............##....##.................#",
    "###########################################################"
]



def is_wall(x, y):
    # Проверка выхода за границы карты
    if 0 <= y < len(maze_data) and 0 <= x < len(maze_data[y]):
        return maze_data[y][x] == "#"
    return True  # всё вне границ считаем стеной


def draw_maze(screen):
    for y, row in enumerate(maze_data):
        for x, char in enumerate(row):
            if char == "#":
                pygame.draw.rect(screen, GRAY,
                                 (PADDING + x * TILE_SIZE,
                                  PADDING + y * TILE_SIZE,
                                  TILE_SIZE, TILE_SIZE))
